// This file was generated by counterfeiter
package fakes

import "io"
import "os"
import "net/http"
import "sync"

type FakeHasImports struct {
	sync.RWMutex
	DoThingsStub        func(io.Writer, *os.File) *http.Client
	doThingsArgsForCall []struct {
		arg1 io.Writer
		arg2 *os.File
	}
	doThingsReturns struct {
		result1 *http.Client
	}
}

func (fake *FakeHasImports) DoThings(arg1 io.Writer, arg2 *os.File) *http.Client {
	fake.Lock()
	defer fake.Unlock()
	fake.doThingsArgsForCall = append(fake.doThingsArgsForCall, struct {
		arg1 io.Writer
		arg2 *os.File
	}{arg1, arg2})
	if fake.DoThingsStub != nil {
		return fake.DoThingsStub(arg1, arg2)
	} else {
		return fake.doThingsReturns.result1
	}
}

func (fake *FakeHasImports) DoThingsCallCount() int {
	fake.RLock()
	defer fake.RUnlock()
	return len(fake.doThingsArgsForCall)
}

func (fake *FakeHasImports) DoThingsArgsForCall(i int) (io.Writer, *os.File) {
	fake.RLock()
	defer fake.RUnlock()
	return fake.doThingsArgsForCall[i].arg1, fake.doThingsArgsForCall[i].arg2
}

func (fake *FakeHasImports) DoThingsReturns(result1 *http.Client) {
	fake.doThingsReturns = struct {
		result1 *http.Client
	}{result1}
}
