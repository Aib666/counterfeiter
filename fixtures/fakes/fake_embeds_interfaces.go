// This file was generated by counterfeiter
package fakes

import (
	"sync"
	. "github.com/maxbrunsfeld/counterfeiter/fixtures"
)

type FakeEmbedsInterfaces struct {
	WriteStub        func(p []byte) (n int, err error)
	writeMutex       sync.RWMutex
	writeArgsForCall []struct {
		p []byte
	}
	writeReturns struct {
		result1 int
		result2 error
	}
	EmbeddedMethodStub        func() string
	embeddedMethodMutex       sync.RWMutex
	embeddedMethodArgsForCall []struct{}
	embeddedMethodReturns struct {
		result1 string
	}
	DoThingsStub        func()
	doThingsMutex       sync.RWMutex
	doThingsArgsForCall []struct{}
}

func (fake *FakeEmbedsInterfaces) Write(p []byte) (n int, err error) {
	fake.writeMutex.Lock()
	defer fake.writeMutex.Unlock()
	fake.writeArgsForCall = append(fake.writeArgsForCall, struct {
		p []byte
	}{p})
	if fake.WriteStub != nil {
		return fake.WriteStub(p)
	} else {
		return fake.writeReturns.result1, fake.writeReturns.result2
	}
}

func (fake *FakeEmbedsInterfaces) WriteCallCount() int {
	fake.writeMutex.RLock()
	defer fake.writeMutex.RUnlock()
	return len(fake.writeArgsForCall)
}

func (fake *FakeEmbedsInterfaces) WriteArgsForCall(i int) []byte {
	fake.writeMutex.RLock()
	defer fake.writeMutex.RUnlock()
	return fake.writeArgsForCall[i].p
}

func (fake *FakeEmbedsInterfaces) WriteReturns(result1 int, result2 error) {
	fake.writeReturns = struct {
		result1 int
		result2 error
	}{result1, result2}
}

func (fake *FakeEmbedsInterfaces) EmbeddedMethod() string {
	fake.embeddedMethodMutex.Lock()
	defer fake.embeddedMethodMutex.Unlock()
	fake.embeddedMethodArgsForCall = append(fake.embeddedMethodArgsForCall, struct{}{})
	if fake.EmbeddedMethodStub != nil {
		return fake.EmbeddedMethodStub()
	} else {
		return fake.embeddedMethodReturns.result1
	}
}

func (fake *FakeEmbedsInterfaces) EmbeddedMethodCallCount() int {
	fake.embeddedMethodMutex.RLock()
	defer fake.embeddedMethodMutex.RUnlock()
	return len(fake.embeddedMethodArgsForCall)
}

func (fake *FakeEmbedsInterfaces) EmbeddedMethodReturns(result1 string) {
	fake.embeddedMethodReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeEmbedsInterfaces) DoThings() {
	fake.doThingsMutex.Lock()
	defer fake.doThingsMutex.Unlock()
	fake.doThingsArgsForCall = append(fake.doThingsArgsForCall, struct{}{})
	if fake.DoThingsStub != nil {
		fake.DoThingsStub()
	}
}

func (fake *FakeEmbedsInterfaces) DoThingsCallCount() int {
	fake.doThingsMutex.RLock()
	defer fake.doThingsMutex.RUnlock()
	return len(fake.doThingsArgsForCall)
}

var _ EmbedsInterfaces = new(FakeEmbedsInterfaces)
